{"version":3,"sources":["PersonList.js","PersonForm.js","PersonFilter.js","Notification.js","services/personService.js","App.js","index.js"],"names":["PersonList","props","persons","removePerson","map","person","key","Math","floor","random","name","number","onClick","id","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","addPerson","onSubmit","value","onChange","type","PersonFilter","nameFilter","handleFilterChange","Notification","message","status","statusStyle","color","className","style","background","fontSize","borderStyle","borderRadius","padding","marginBottom","baseUrl","axios","get","then","response","data","catch","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","notificationMessage","setNotificationMessage","notificationStatus","setNotificationStatus","useEffect","personService","allPersons","concat","setNameFilter","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","length","window","confirm","personToUpdate","newPersonObject","setTimeout","error","personObject","newPerson","personToDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a3d73b3.chunk.js","sourcesContent":["import React from 'react'\n\nconst PersonList = (props) => {\n\n    const { persons, removePerson } = props\n\n    return (\n        <div>\n            {\n                persons.map(person => <p key={Math.floor(Math.random() * Math.floor(10000000))}>{person.name} {person.number} <button onClick={() => removePerson(person.id)}>delete</button></p>)\n            }\n        </div>\n    )\n}\n\nexport default PersonList\n\n","import React from 'react'\n\nconst PersonForm = (props) => {\n\n    constÂ {newName, newNumber, handleNameChange, handleNumberChange, addPerson} = props\n\n    return (\n        <form onSubmit={addPerson}>\n            <div>\n                name:\n          <input value={newName} onChange={handleNameChange} />\n            </div>\n            <div>\n                number:\n          <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default PersonForm\n\n","import React from 'react'\n\nconst PersonFilter = (props) => {\n\n    const {nameFilter, handleFilterChange} = props\n\n    return (\n        <div>\n            <p>filter shown with\n                <input value={nameFilter} onChange={handleFilterChange} />\n            </p>\n        </div>\n    )\n}\n\nexport default PersonFilter\n\n","import React from 'react'\n\nconst Notification = ({ message, status }) => {\n\n    const notificationStyle = {\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n\n    const errorStyle = {\n        color: 'red',\n    }\n\n    const successStyle = {\n        color: 'green',\n\n    }\n\n    if (message === null) {\n      return null\n    }\n\n    const statusStyle = status === 'error' ? errorStyle : successStyle\n  \n    return (\n      <div className=\"error\" style={{...notificationStyle, ...statusStyle}}>\n        {message}\n      </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data).catch()\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data).catch()\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data).catch()\n}\n\nconst remove = id => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data).catch()\n}\n\n\nexport default { getAll, create, update, remove }\n","import React, { useState, useEffect } from 'react'\n\nimport PersonList from './PersonList'\nimport PersonForm from './PersonForm'\nimport PersonFilter from './PersonFilter'\nimport Notification from './Notification'\nimport personService from './services/personService'\n\nimport axios from 'axios'\n\nconst App = () => {\n\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [notificationStatus, setNotificationStatus] = useState(null)\n\n  useEffect(() => {\n    personService.getAll().then(allPersons => setPersons(persons.concat(allPersons)))\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    if (persons.filter(person => person.name.toLowerCase() === newName.toLowerCase()).length !== 0) {\n      const confirmed = window.confirm(`${newName} is already added to phonebook, replace the old number with a new one`)\n\n      if (confirmed) {\n\n        const personToUpdate = persons.filter(person => person.name.toLowerCase() === newName.toLowerCase())[0]\n\n        const newPersonObject = {\n          name: personToUpdate.name,\n          number: newNumber,\n          id: personToUpdate.id\n        }\n\n        personService.update(personToUpdate.id, newPersonObject).\n          then(response => {\n            setPersons(persons.map(person => person.id === personToUpdate.id ? newPersonObject : person))\n\n            setNotificationMessage(\n              `Updated ${newPersonObject.name}'s phone number`\n            )\n            setNotificationStatus('success')\n            setTimeout(() => {\n              setNotificationMessage(null)\n              setNotificationStatus(null)\n            }, 5000)\n\n          }).catch(error => {\n            setNotificationMessage(\n              `${newPersonObject.name} has already been removed from server`\n            )\n            setNotificationStatus('error')\n            setTimeout(() => {\n              setNotificationMessage(null)\n              setNotificationStatus(null)\n            }, 5000)\n          })\n      }\n    } else {\n\n      const personObject = {\n        name: newName,\n        number: newNumber,\n      }\n      personService.create(personObject).then(newPerson => {\n        setPersons(persons.concat(newPerson))\n      }).catch(error => {\n        let message = error.response.data.error\n        setNotificationMessage(\n          `${message}`\n        )\n        setNotificationStatus('error')\n        setTimeout(() => {\n          setNotificationMessage(null)\n          setNotificationStatus(null)\n        }, 5000)\n\n      })\n      setNewName('')\n      setNewNumber('')\n\n      setNotificationMessage(\n        `Added ${personObject.name}`\n      )\n      setNotificationStatus('success')\n      setTimeout(() => {\n        setNotificationMessage(null)\n        setNotificationStatus(null)\n      }, 5000)\n    }\n  }\n\n  const removePerson = (id) => {\n    const personToDelete = persons.filter(person => person.id === id)[0]\n    const confirmed = window.confirm(`Delete ${personToDelete.name}?`)\n    if (confirmed) {\n      personService.remove(id).then(response => {\n        setPersons(persons.filter(person => person.id !== personToDelete.id))\n\n        setNotificationMessage(\n          `Removed ${personToDelete.name}`\n        )\n        setNotificationStatus('success')\n        setTimeout(() => {\n          setNotificationMessage(null)\n          setNotificationStatus(null)\n        }, 5000)\n\n      })\n    }\n  }\n\n  const [nameFilter, setNameFilter] = useState('')\n\n  const handleFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n\n  const personsToShow = nameFilter !== '' ? persons.filter(person => person.name.toLowerCase().includes(nameFilter.toLowerCase())) : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} status={notificationStatus} />\n      <PersonFilter nameFilter={nameFilter} handleFilterChange={handleFilterChange} />\n      <h2>add a new</h2>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        addPerson={addPerson}\n      />\n      <h2>Numbers</h2>\n      <PersonList persons={personsToShow} removePerson={removePerson} />\n    </div>\n  )\n\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}